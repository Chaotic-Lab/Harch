#!/bin/bash

# Harch UEFI/Bios Install (Hackers Arch)
# ---------------------------------------------------------------
# Author    : Chaotic_Guru                                       |
# Github    : https://github.com/ChaoticHackingNetwork           |
# Discord   : https://discord.gg/nv445EX (ChaoticHackingNetwork) |
# ---------------------------------------------------------------

echo -e "\033[33;36mChaotic_Guru's Hacking Arch Installer\033[0m"

echo "╔╗ ╔╗            ╔╗      ╔╗                 "
echo "║║ ║║            ║║      ║║                 "
echo "║╚═╝║╔══╗ ╔═╗╔══╗║╚═╗    ║║   ╔╗╔═╗ ╔╗╔╗╔╗╔╗"
echo "║╔═╗║╚ ╗║ ║╔╝║╔═╝║╔╗║    ║║ ╔╗╠╣║╔╗╗║║║║╚╬╬╝"
echo "║║ ║║║╚╝╚╗║║ ║╚═╗║║║║    ║╚═╝║║║║║║║║╚╝║╔╬╬╗"
echo "╚╝ ╚╝╚═══╝╚╝ ╚══╝╚╝╚╝    ╚═══╝╚╝╚╝╚╝╚══╝╚╝╚╝"
echo. 
echo.
echo.
                                                      
#Network Connections
read -p '\033[33;36mAre you connected to the Internet? [y/N]:\033[0m ' connected
if ! [ $connected = 'y' ] && ! [ $connected = 'Y' ]
then
	echo "Please connect to the Internet to continue..."
	exit
fi

read -p '\033[33;36mEnter disk to install Harch - like /dev/sdb:\033[0m' diskDrive

read -p 'This script is by default change to modify /dev/sda, ensure this is the drive you want, Continue? [y/N]:' device
if ! [ $device = 'y' ] && ! [ $device = 'Y']
then
	echo "Change your partition!"
	exit
fi

#Determine BIOS or UEFI
ls /sys/firmware/efi
if [[ -d "/sys/firmware/efi" ]]
then
echo "This is a UEFI System!" 
echo "This script will create and format the following partitions:"
echo "--------- /dev/sda1 - 512M will be mounted as /boot/EFI ------------"
echo "--------- /dev/sda2 - 16G of space will be mounted as SWAP ---------"
echo "--------- /dev/sda3 - rest of space will be mounted as / -----------"
echo""
echo "Exit now if this is not correct!!!"
sleep 10s
#Create partitions thru fdisk...
#https://superuser.com/a/984637
sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | fdisk $diskDrive #CHANGE THIS IF NEEDED!!!
o # Clear the in-memory partition table
n # New partition
p # Primary partition
1 # First partition
	# EFI - start at beginning of disk
+512M # /boot/EFI
n
p
2
	# SWAP - start immediately after preceding partition
+16G
n 
p
3
	# ROOT, start immediately after preceding partition
	# default, use rest of disk space
p # print the in-memory table
w # write changes to disk
q # quit
EOF

	#Format partitions
	mkfs.ext4 $diskDrive + 3 
	mkfs.fat -F32 $diskDrive + 1

	#Mount partitions
	mount $diskDrive + 3 /mnt

	#Create swap space
	mkswap $diskDrive + 2
	swapon $diskDrive + 2

else
echo "This is a BIOS system!" 
echo "This script will create and format the following partitions:"
echo ""
echo "--------- /dev/sda1 - 16G will be mounted as SWAP space ------------"
echo "--------- /dev/sda2 - Rest of space will be mounted as / -----------"
echo "Exit now if this is not correct!!!"
sleep 10s
echo""
#Create partitions thru fdisk...
#https://superuser.com/a/984637
sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | fdisk $diskDrive # CHANGE THIS IF NEEDED!!!
o # Clear the in-memory partition table
n # New partition
p # Primary partition
1 # First partition
	# SWAP - start at beginning of disk
+16G # swap space
n 
p
2
	# ROOT, start immediately after preceding partition
	# default, use rest of disk space
p # print the in-memory table
w # write changes to disk
q # quit
EOF

	#Format partitions
	mkfs.ext4 diskDrive2

	#Mount partitions
	mount diskDrive2 /mnt

	#Create swap space6
	mkswap diskDrive1
	swapon diskDrive1

fi

#Install base system
pacstrap /mnt base base-devel linux linux-firmware

#Generate fstab
genfstab -U /mnt >> /mnt/etc/fstab
cat /mnt/etc/fstab
lsblk
echo "Finishing last minute setup..."
sleep 3

#Finish last minute setup
echo 0 > /proc/sys/kernel/hung_task_timeout_secs
curl -O https://raw.githubusercontent.com/ChaoticHackingNetwork/Harch/main/HarchPOST
mv HarchPOST /mnt
echo""
echo "The final script has been installed and move to your new root directory"
echo "Run these commands to finish setup"
echo""
echo""
echo "	[1] arch-chroot /mnt /bin/bash"
echo "	[2] chmod +x HarchPost.sh"
echo "  [3] ./HarchPost.sh"
echo""

exit
